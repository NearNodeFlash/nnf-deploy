repositories:
  # Remote References:
  #   If useRemoteK==true, then use the remote reference to the kustomize
  #   configuration rather than referring to the local workarea.
  #   Examples for the build value:
  #     v0.0.3 (a tag)
  #     master (most recent build from the master branch)
  #     a branch name (whether it is or isn't a PR)
  #   The url may contain up to two %s format specifiers.  If the repo
  #   contains overlays, then the first %s indicates where the overlay name
  #   will be inserted.  The final %s indicates where the build value will be
  #   inserted.
  #   Example:
  #     useRemote: true
  #     remoteReference:
  #       build: v0.0.3
  #       url: https://github.com/HewlettPackard/lustre-csi-driver.git/deploy/kubernetes/%s/?ref=%s
  #
  - name: dws
    overlays: [craystack, kind, dp0]
    development: https://ghcr.io/dataworkflowservices/dws
    master: https://ghcr.io/dataworkflowservices/dws
  - name: nnf-dm
    overlays: [kind, dp0]
    development: https://ghcr.io/nearnodeflash/nnf-dm
    master: https://ghcr.io/nearnodeflash/nnf-dm
  - name: nnf-sos
    overlays: [craystack, kind, dp0, examples-htx]
    development: https://ghcr.io/nearnodeflash/nnf-sos
    master: https://ghcr.io/nearnodeflash/nnf-sos
  - name: lustre-csi-driver
    overlays: [overlays/rabbit, overlays/kind]
    development: https://ghcr.io/hewlettpackard/lustre-csi-driver
    master: https://ghcr.io/hewlettpackard/lustre-csi-driver
    useRemoteK: false
    remoteReference:
      build: v0.1.5
      url: https://github.com/HewlettPackard/lustre-csi-driver.git/deploy/kubernetes/%s/?ref=%s
  - name: lustre-fs-operator
    development: https://ghcr.io/nearnodeflash/lustre-fs-operator
    master: https://ghcr.io/nearnodeflash/lustre-fs-operator
    useRemoteK: false
    remoteReference:
      build: v0.1.11
      url: https://github.com/NearNodeFlash/lustre-fs-operator.git/config/default/?ref=%s
buildConfiguration:
  # Environment variables to set when calling any 'make' or 'deploy'
  # command in a submodule.
  env:
    # The nnf-mfu container to use.
    # Example values:
    #  - A specific release build: 0.0.1 (without the "v" prefix)
    #  - The most recent build from the master branch: master
    - name: NNFMFU_VERSION
      value: 0.1.6
thirdPartyServices:
  # Other services that NNF requires to be available on the system.
  # They will be installed in the order specified here.
  - name: cert-manager
    useRemoteF: false
    url: https://github.com/jetstack/cert-manager/releases/download/v1.13.1/cert-manager.yaml
    # The NNF services will dump errors at installation time if the
    # cert-manager webhook isn't ready.
    waitCmd: kubectl wait deploy -n cert-manager --timeout=180s cert-manager-webhook --for jsonpath='{.status.availableReplicas}=1'
  - name: mpi-operator
    useRemoteF: false
    url: https://raw.githubusercontent.com/kubeflow/mpi-operator/v0.4.0/deploy/v2beta1/mpi-operator.yaml
  - name: kube-storage-version-migrator
    useRemoteF: false
    url: https://github.com/NearNodeFlash/kube-storage-version-migrator/releases/download/v0.1.2/manifests.tar
  - name: argocd
    useHelm: true
    helmCmd: helm install nnf -n argocd --create-namespace charts/argo-cd-7.6.12.tgz -f config/helm-values/argocd.yaml
    waitCmd: kubectl wait deploy -n argocd --timeout=180s nnf-argocd-server --for jsonpath='{.status.availableReplicas}=1'
